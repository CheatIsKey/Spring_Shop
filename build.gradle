plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'capstone'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

ext {
	querydslVersion = '5.0.0'
}

repositories {
	mavenCentral()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
	// Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Webjars
	implementation 'org.webjars:bootstrap:4.5.2'
	implementation 'org.webjars:jquery:3.5.1'

	// Security
	implementation 'org.springframework.security:spring-security-crypto'

	// QueryDSL
	implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// Jakarta API
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// Database
	runtimeOnly 'com.h2database:h2'

	// P6Spy
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.10.0'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'com.google.cloud:spring-cloud-gcp-starter-storage:2.0.4'
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', "$buildDir/generated/sources/annotationProcessor/java/main"]
		}
		processResources {
			from('src/main/resources') {
				include '**/*'
			}
			duplicatesStrategy = DuplicatesStrategy.EXCLUDE
		}
	}
}

tasks.named('processResources') {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.named('test') {
	useJUnitPlatform()
}

clean {
	// generated sources 및 QueryDSL 생성 결과 삭제
	delete "$buildDir/generated"
}



